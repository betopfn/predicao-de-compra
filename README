# Previs√£o de Compra de Clientes com RFM e Machine Learning

Este projeto tem como objetivo prever se um cliente realizar√° uma nova compra no futuro. Utilizando o dataset "Online Retail", realizamos uma an√°lise **RFM (Rec√™ncia, Frequ√™ncia e Valor Monet√°rio)** para extrair caracter√≠sticas do comportamento do cliente e, em seguida, treinamos um modelo de Machine Learning (`Random Forest`) para classificar os clientes como prov√°veis compradores ou n√£o.

O script principal (`correcao_dataset.py`) realiza todo o processo: desde a limpeza e pr√©-processamento dos dados at√© o treinamento do modelo e a gera√ß√£o de um relat√≥rio com as previs√µes.

## üìÇ Estrutura do Projeto

/predicao-de-compra
|
|-- correcao_dataset.py # Script principal com todo o fluxo de trabalho
|-- Online Retail.xlsx # Dataset original com os dados de transa√ß√µes
|-- relatorio_previsoes.csv # Arquivo de sa√≠da gerado pelo script com as previs√µes

## üöÄ Tecnologias Utilizadas

- **Python 3.12**
- **Pandas:** Para manipula√ß√£o e an√°lise dos dados.
- **NumPy:** Para opera√ß√µes num√©ricas.
- **Scikit-learn:** Para cria√ß√£o e avalia√ß√£o do modelo de Machine Learning.
- **Openpyxl:** Para leitura de arquivos `.xlsx`.

## ‚öôÔ∏è Como Executar o Projeto

Para executar este projeto localmente, siga os passos abaixo:

**1. Clone o reposit√≥rio:**

```bash
git clone [https://github.com/betopfn/predicao-de-compra.git](https://github.com/betopfn/predicao-de-compra.git)
cd predicao-de-compra
2. Crie um ambiente virtual (recomendado):

Bash

python -m venv venv
source venv/bin/activate  # No Windows: venv\Scripts\activate
3. Instale as depend√™ncias:
√â uma boa pr√°tica ter um arquivo requirements.txt. Voc√™ pode criar um com o seguinte conte√∫do:

pandas
numpy
scikit-learn
openpyxl
E depois instalar com o comando:

Bash

pip install -r requirements.txt
4. Execute o script principal:

Bash

python correcao_dataset.py
5. Verifique os resultados:
Ap√≥s a execu√ß√£o, o terminal exibir√° a acur√°cia do modelo e o relat√≥rio de classifica√ß√£o. Al√©m disso, um novo arquivo chamado relatorio_previsoes.csv ser√° criado na pasta do projeto, contendo as previs√µes detalhadas para o conjunto de teste.

üõ†Ô∏è Metodologia
O processo de an√°lise e modelagem foi dividido nas seguintes etapas:

Pr√©-processamento e Limpeza:

Carregamento do dataset Online Retail.xlsx.

Remo√ß√£o de linhas com CustomerID ou InvoiceNo nulos.

Convers√£o de tipos de dados para otimiza√ß√£o.

C√°lculo da Receita (Quantidade * Pre√ßo Unit√°rio).

Remo√ß√£o de transa√ß√µes canceladas (que cont√™m 'C' no InvoiceNo).

Exclus√£o de registros duplicados.

Divis√£o Temporal dos Dados:

O dataset foi dividido em dois per√≠odos usando uma data de corte (2011-12-01).

Dados de Treinamento: Todas as transa√ß√µes antes da data de corte.

Dados de Previs√£o: Todas as transa√ß√µes a partir da data de corte (usados para definir a vari√°vel alvo).

C√°lculo das M√©tricas RFM:

Utilizando apenas os dados de treinamento, foram calculadas as m√©tricas de Rec√™ncia, Frequ√™ncia e Valor Monet√°rio para cada cliente.

Cria√ß√£o da Vari√°vel Alvo:

A vari√°vel alvo (Fez_compra) foi criada identificando quais clientes do conjunto de treinamento voltaram a comprar no per√≠odo de previs√£o. Se o cliente comprou, o valor √© 1, caso contr√°rio, 0.

Treinamento e Avalia√ß√£o do Modelo:

As features (R, F, M) e a vari√°vel alvo foram divididas em conjuntos de treino e teste (80/20).

Um modelo RandomForestClassifier foi treinado com os dados.

O modelo foi avaliado usando a acur√°cia e o classification_report, que inclui precis√£o, recall e F1-score.

Gera√ß√£o do Relat√≥rio Final:

Um DataFrame com os resultados, contendo os valores reais e as previs√µes do modelo, foi salvo como relatorio_previsoes.csv.
```
